<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.weasis</groupId>
  <artifactId>weasis-dicom-tools</artifactId>
  <packaging>jar</packaging>
  <name>Weasis DICOM API (based on dcm4che3)</name>
  <version>5.31.1</version>

  <properties>
    <java-version>17</java-version>
    <enforcer.jdk-version>[${java-version},)</enforcer.jdk-version>
    <enforcer.maven-version>[3.0.5,)</enforcer.maven-version>
    <dcm4che.version>5.31.1</dcm4che.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <weasis.core.img.version>4.8.1</weasis.core.img.version>
    <weasis.opencv.native.version>4.8.1-dcm</weasis.opencv.native.version>

    <sonar.projectKey>weasis-dicom-tools</sonar.projectKey>
    <sonar.organization>nroduit-github</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.language>java</sonar.language>
    <sonar.java.source>${java-version}</sonar.java.source>
    <sonar.test.exclusions>src/test/**/*</sonar.test.exclusions>

    <!-- Tests require the native library and can only be run on Linux, Windows and macOS-->
    <argLine>-Djava.library.path=${project.build.directory}/lib/${os-name}-${cpu-name}</argLine>
  </properties>

  <licenses>
    <license>
      <name>Eclipse Public License v2.0</name>
      <url>https://www.eclipse.org/legal/epl-v20.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <repositories>
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>mvn-repo-master</id>
      <url>https://raw.github.com/nroduit/mvn-repo/master/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>www.dcm4che.org</id>
      <name>dcm4che Repository</name>
      <url>https://www.dcm4che.org/maven2</url>
    </repository>
  </repositories>


  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.11.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.10</version>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.38.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/dict</directory>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java-version}</source>
          <target>${java-version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.dcm4che</groupId>
                  <artifactId>dcm4che-dict</artifactId>
                  <version>${dcm4che.version}</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <includes>uids.xml,dataelements.xml</includes>
                  <excludes>META-INF/**</excludes>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/dict</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.weasis.thirdparty.org.opencv</groupId>
                  <artifactId>${lib-file-name}</artifactId>
                  <version>${weasis.opencv.native.version}</version>
                  <type>${lib-file-ext}</type>
                  <classifier>${os-name}-${cpu-name}</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/lib/${os-name}-${cpu-name}
                  </outputDirectory>
                  <destFileName>${lib-file-name}.${lib-file-ext}</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>min-requirement</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${enforcer.maven-version}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${enforcer.jdk-version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>bind-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <configuration>
          <java>
            <googleJavaFormat/>
            <toggleOffOn>
              <off>@formatter:off</off>
              <on>@formatter:on</on>
            </toggleOffOn>
            <licenseHeader>
              <!-- @formatter:off -->
              <content>
/*
 * Copyright (c) $YEAR Weasis Team and other contributors.
 *
 * This program and the accompanying materials are made available under the terms of the Eclipse
 * Public License 2.0 which is available at https://www.eclipse.org/legal/epl-2.0, or the Apache
 * License, Version 2.0 which is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 */
              </content>
              <!-- @formatter:on -->
            </licenseHeader>
          </java>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- To run Integration Tests: mvn verify -P dicom-integration -->
      <id>dicom-integration</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.1.2</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>linux-x86_64</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>linux-aarch64</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>aarch64</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>aarch64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>linux-arm32</id>
      <activation>
        <os>
          <name>linux</name>
          <arch>arm</arch>
        </os>
      </activation>
      <properties>
        <os-name>linux</os-name>
        <cpu-name>armv7a</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>so</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>macosx-x86_64</id>
      <activation>
        <os>
          <name>mac os x</name>
          <arch>x86_64</arch>
        </os>
      </activation>
      <properties>
        <os-name>macosx</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>dylib</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>macosx-aarch64</id>
      <activation>
        <os>
          <name>mac os x</name>
          <arch>aarch64</arch>
        </os>
      </activation>
      <properties>
        <os-name>macosx</os-name>
        <cpu-name>aarch64</cpu-name>
        <lib-file-name>libopencv_java</lib-file-name>
        <lib-file-ext>dylib</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>windows-x86_64</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <os-name>windows</os-name>
        <cpu-name>x86-64</cpu-name>
        <lib-file-name>opencv_java</lib-file-name>
        <lib-file-ext>dll</lib-file-ext>
      </properties>
    </profile>
    <profile>
      <id>windows-x86</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>x86</arch>
        </os>
      </activation>
      <properties>
        <os-name>windows</os-name>
        <cpu-name>x86</cpu-name>
        <lib-file-name>opencv_java</lib-file-name>
        <lib-file-ext>dll</lib-file-ext>
      </properties>
    </profile>

    <profile>
      <id>coverage</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <includes>
                <include>org/dcm4che3/**/*.*</include>
                <include>org/weasis/dicom/**/*.*</include>
              </includes>
              <excludes>
                <exclude>**/package-info.java</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-core</artifactId>
      <version>${dcm4che.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-dict</artifactId>
      <version>${dcm4che.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-net</artifactId>
      <version>${dcm4che.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-json</artifactId>
      <version>${dcm4che.version}</version>
    </dependency>
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-image</artifactId>
      <version>${dcm4che.version}</version>
    </dependency>
    <dependency>
      <groupId>org.weasis.core</groupId>
      <artifactId>weasis-core-img</artifactId>
      <version>${weasis.core.img.version}</version>
    </dependency>

    <!-- OpenCV native library -->
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <version>${weasis.opencv.native.version}</version>
      <type>so</type>
      <classifier>linux-x86-64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <version>${weasis.opencv.native.version}</version>
      <type>so</type>
      <classifier>linux-aarch64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <version>${weasis.opencv.native.version}</version>
      <type>so</type>
      <classifier>linux-armv7a</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <version>${weasis.opencv.native.version}</version>
      <type>dylib</type>
      <classifier>macosx-x86-64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>libopencv_java</artifactId>
      <version>${weasis.opencv.native.version}</version>
      <type>dylib</type>
      <classifier>macosx-aarch64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>opencv_java</artifactId>
      <version>${weasis.opencv.native.version}</version>
      <type>dll</type>
      <classifier>windows-x86-64</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.weasis.thirdparty.org.opencv</groupId>
      <artifactId>opencv_java</artifactId>
      <version>${weasis.opencv.native.version}</version>
      <type>dll</type>
      <classifier>windows-x86</classifier>
      <scope>provided</scope>
    </dependency>

    <!-- FOR TESTS -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>5.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>5.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.10.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.36</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
</project>
